// Objective-C API for talking to code.hq.twilio.com/authy/coresdk Go package.
//   gobind -lang=objc -prefix=Authy code.hq.twilio.com/authy/coresdk
//
// File is generated by gobind. Do not edit.

#ifndef __AuthyCoresdk_H__
#define __AuthyCoresdk_H__

#include <Foundation/Foundation.h>

@class AuthyCoresdkAuthyToken;
@class AuthyCoresdkConfig;
@class AuthyCoresdkDevice;
@class AuthyCoresdkGAuthToken;
@class AuthyCoresdkJSON;
@class AuthyCoresdkRegistrationRequest;
@class AuthyCoresdkRequestError;
@class AuthyCoresdkRequestErrorResponse;
@class AuthyCoresdkUser;
@protocol AuthyCoresdkToken;
@class AuthyCoresdkToken;

@interface AuthyCoresdkAuthyToken : NSObject {
}
@property(strong, readonly) id _ref;

- (id)initWithRef:(id)ref;
- (NSString*)id;
- (void)setID:(NSString*)v;
- (NSString*)name;
- (void)setName:(NSString*)v;
- (int)serialID;
- (void)setSerialID:(int)v;
- (int)version;
- (void)setVersion:(int)v;
- (NSString*)assetsGroup;
- (void)setAssetsGroup:(NSString*)v;
- (NSString*)backgroundColor;
- (void)setBackgroundColor:(NSString*)v;
- (NSString*)circleBackground;
- (void)setCircleBackground:(NSString*)v;
- (NSString*)circleColor;
- (void)setCircleColor:(NSString*)v;
- (BOOL)customAssets;
- (void)setCustomAssets:(BOOL)v;
- (NSString*)labelsColor;
- (void)setLabelsColor:(NSString*)v;
- (NSString*)labelsShadowColor;
- (void)setLabelsShadowColor:(NSString*)v;
- (NSString*)timerColor;
- (void)setTimerColor:(NSString*)v;
- (NSString*)tokenColor;
- (void)setTokenColor:(NSString*)v;
- (NSString*)secretSeed;
- (void)setSecretSeed:(NSString*)v;
- (int)tokenID;
- (void)setTokenID:(int)v;
- (BOOL)check:(int)deviceID error:(NSError**)error;
- (NSString*)generateOtp;
- (NSString*)getLogoPath;
- (NSString*)getSmallLogoPath;
- (BOOL)save:(NSError**)error;
- (BOOL)update:(NSError**)error;
@end

@interface AuthyCoresdkConfig : NSObject {
}
@property(strong, readonly) id _ref;

- (id)initWithRef:(id)ref;
- (int)currentDeviceID;
- (void)setCurrentDeviceID:(int)v;
- (int64_t)createdAt;
- (void)setCreatedAt:(int64_t)v;
- (int64_t)updatedAt;
- (void)setUpdatedAt:(int64_t)v;
- (BOOL)save:(NSError**)error;
@end

@interface AuthyCoresdkDevice : NSObject {
}
@property(strong, readonly) id _ref;

- (id)initWithRef:(id)ref;
- (int)id;
- (void)setID:(int)v;
- (NSString*)secretSeed;
- (void)setSecretSeed:(NSString*)v;
- (NSString*)apiKey;
- (void)setAPIKey:(NSString*)v;
- (int)authenticatorVersion;
- (void)setAuthenticatorVersion:(int)v;
- (NSString*)authenticatorTimestamp;
- (void)setAuthenticatorTimestamp:(NSString*)v;
- (int)userAuthyID;
- (void)setUserAuthyID:(int)v;
- (NSString*)sdkVersion;
- (void)setSDKVersion:(NSString*)v;
- (int)movingFactorOffset;
- (void)setMovingFactorOffset:(int)v;
- (BOOL)backupsEnabled;
- (void)setBackupsEnabled:(BOOL)v;
- (BOOL)healthCheck:(NSError**)error;
- (BOOL)save:(NSError**)error;
- (BOOL)sync:(NSError**)error;
- (BOOL)syncAuthyTokens:(NSError**)error;
- (BOOL)syncGAuthTokens:(NSError**)error;
@end

@interface AuthyCoresdkGAuthToken : NSObject {
}
@property(strong, readonly) id _ref;

- (id)initWithRef:(id)ref;
- (NSString*)encryptedSeed;
- (void)setEncryptedSeed:(NSString*)v;
- (NSString*)salt;
- (void)setSalt:(NSString*)v;
- (int)passwordTimestamp;
- (void)setPasswordTimestamp:(int)v;
- (int)digits;
- (void)setDigits:(int)v;
- (NSString*)name;
- (void)setName:(NSString*)v;
- (int)authyID;
- (void)setAuthyID:(int)v;
- (NSString*)uniqueID;
- (void)setUniqueID:(NSString*)v;
- (NSString*)originalName;
- (void)setOriginalName:(NSString*)v;
- (NSString*)accountType;
- (void)setAccountType:(NSString*)v;
- (NSString*)secretSeed;
- (void)setSecretSeed:(NSString*)v;
- (BOOL)backedUp;
- (void)setBackedUp:(BOOL)v;
- (BOOL)deleteLocal:(NSError**)error;
- (BOOL)deleteRemote:(NSError**)error;
- (NSString*)generateOtp;
- (NSString*)getLogoPath;
- (NSString*)getSmallLogoPath;
- (BOOL)isDecrypted;
- (BOOL)save:(NSError**)error;
- (BOOL)upload:(NSError**)error;
@end

@interface AuthyCoresdkJSON : NSObject {
}
@property(strong, readonly) id _ref;

- (id)initWithRef:(id)ref;
@end

@interface AuthyCoresdkRegistrationRequest : NSObject {
}
@property(strong, readonly) id _ref;

- (id)initWithRef:(id)ref;
- (NSString*)requestID;
- (void)setRequestID:(NSString*)v;
- (NSString*)phoneCallPIN;
- (void)setPhoneCallPIN:(NSString*)v;
- (NSString*)message;
- (void)setMessage:(NSString*)v;
- (BOOL)success;
- (void)setSuccess:(BOOL)v;
@end

@interface AuthyCoresdkRequestError : NSObject {
}
@property(strong, readonly) id _ref;

- (id)initWithRef:(id)ref;
- (AuthyCoresdkRequestErrorResponse*)response;
- (void)setResponse:(AuthyCoresdkRequestErrorResponse*)v;
- (int)status;
- (void)setStatus:(int)v;
- (NSString*)error;
@end

@interface AuthyCoresdkRequestErrorResponse : NSObject {
}
@property(strong, readonly) id _ref;

- (id)initWithRef:(id)ref;
- (NSString*)message;
- (void)setMessage:(NSString*)v;
- (BOOL)success;
- (void)setSuccess:(BOOL)v;
@end

@interface AuthyCoresdkUser : NSObject {
}
@property(strong, readonly) id _ref;

- (id)initWithRef:(id)ref;
- (int)authyID;
- (void)setAuthyID:(int)v;
- (NSString*)email;
- (void)setEmail:(NSString*)v;
- (int)countryCode;
- (void)setCountryCode:(int)v;
- (NSString*)phoneNumber;
- (void)setPhoneNumber:(NSString*)v;
- (BOOL)success;
- (void)setSuccess:(BOOL)v;
- (AuthyCoresdkDevice*)device;
- (void)setDevice:(AuthyCoresdkDevice*)v;
- (NSString*)status;
- (void)setStatus:(NSString*)v;
- (int)devicesCount;
- (void)setDevicesCount:(int)v;
- (BOOL)getStatus:(NSString**)status error:(NSError**)error;
- (BOOL)registerDevice:(NSString*)code device:(AuthyCoresdkDevice**)device error:(NSError**)error;
- (BOOL)startRegistration:(NSString*)channel nonce:(NSString*)nonce registrationRequest:(AuthyCoresdkRegistrationRequest**)registrationRequest error:(NSError**)error;
@end

@protocol AuthyCoresdkToken
- (NSString*)generateOtp;
- (NSString*)name;
@end

FOUNDATION_EXPORT NSString* const AuthyCoresdkAuthyTokenTableName;
FOUNDATION_EXPORT NSString* const AuthyCoresdkChannelDevice;
FOUNDATION_EXPORT NSString* const AuthyCoresdkChannelSMS;
FOUNDATION_EXPORT NSString* const AuthyCoresdkChannelVoice;
FOUNDATION_EXPORT NSString* const AuthyCoresdkConfigFieldName;
FOUNDATION_EXPORT NSString* const AuthyCoresdkDatabaseAssetsCollection;
FOUNDATION_EXPORT NSString* const AuthyCoresdkDeviceAndroid;
FOUNDATION_EXPORT NSString* const AuthyCoresdkDeviceAndroidTablet;
FOUNDATION_EXPORT NSString* const AuthyCoresdkDeviceChrome;
FOUNDATION_EXPORT NSString* const AuthyCoresdkDeviceIos;
FOUNDATION_EXPORT NSString* const AuthyCoresdkDeviceIosIpad;
FOUNDATION_EXPORT NSString* const AuthyCoresdkDeviceIosIwatch;
FOUNDATION_EXPORT NSString* const AuthyCoresdkDeviceMac;
FOUNDATION_EXPORT NSString* const AuthyCoresdkDeviceTableName;
FOUNDATION_EXPORT NSString* const AuthyCoresdkFileTypeLogo;
FOUNDATION_EXPORT NSString* const AuthyCoresdkFileTypeSmallLogo;
FOUNDATION_EXPORT NSString* const AuthyCoresdkGAuthTableName;
FOUNDATION_EXPORT NSString* const AuthyCoresdkInvalidTOTP;
FOUNDATION_EXPORT NSString* const AuthyCoresdkResolutionExtraHigh;
FOUNDATION_EXPORT NSString* const AuthyCoresdkResolutionHigh;
FOUNDATION_EXPORT NSString* const AuthyCoresdkResolutionMedium;
FOUNDATION_EXPORT NSString* const AuthyCoresdkSettingsCollectionStoreName;
FOUNDATION_EXPORT NSString* const AuthyCoresdkStatusActiveUser;
FOUNDATION_EXPORT NSString* const AuthyCoresdkStatusNewUser;
FOUNDATION_EXPORT NSString* const AuthyCoresdkStatusResettingUser;
FOUNDATION_EXPORT NSString* const AuthyCoresdkStatusUnknownUser;

@interface AuthyCoresdk : NSObject 
+ (NSString*) apiKey;
+ (void) setAPIKey:(NSString*)v;

+ (NSString*) baseURL;
+ (void) setBaseURL:(NSString*)v;

+ (BOOL) debug;
+ (void) setDebug:(BOOL)v;

@end

FOUNDATION_EXPORT NSString* AuthyCoresdkAssetPath(NSString* fileType, NSString* fileID);

FOUNDATION_EXPORT NSString* AuthyCoresdkAssetsPath();

FOUNDATION_EXPORT BOOL AuthyCoresdkCreateUser(int countryCode, NSString* phoneNumber, NSString* email, AuthyCoresdkUser** user, NSError** error);

FOUNDATION_EXPORT BOOL AuthyCoresdkCurrentDevice(AuthyCoresdkDevice** device, NSError** error);

FOUNDATION_EXPORT BOOL AuthyCoresdkDecryptGAuthTokens(NSString* password, NSError** error);

FOUNDATION_EXPORT BOOL AuthyCoresdkDeleteAuthyToken(NSString* authyTokenID, NSError** error);

FOUNDATION_EXPORT BOOL AuthyCoresdkDownloadAssets(NSString* device, NSString* resolution, NSString* appIdsStr, NSError** error);

FOUNDATION_EXPORT BOOL AuthyCoresdkEncryptGAuthTokens(NSString* password, NSError** error);

FOUNDATION_EXPORT BOOL AuthyCoresdkFindAuthyToken(NSString* authyTokenID, AuthyCoresdkAuthyToken** authyToken, NSError** error);

FOUNDATION_EXPORT BOOL AuthyCoresdkFindDevice(int id, AuthyCoresdkDevice** device, NSError** error);

FOUNDATION_EXPORT BOOL AuthyCoresdkFindGAuthToken(NSString* id, AuthyCoresdkGAuthToken** token, NSError** error);

FOUNDATION_EXPORT BOOL AuthyCoresdkGenerateSecureKey(int bitsize, NSData** key, NSError** error);

FOUNDATION_EXPORT BOOL AuthyCoresdkGenerateSecureKeyHex(int bitsize, NSString** key, NSError** error);

FOUNDATION_EXPORT NSString* AuthyCoresdkGetAuthyTokensIdsStr();

FOUNDATION_EXPORT NSString* AuthyCoresdkGetGAuthTokenIdsStr();

FOUNDATION_EXPORT BOOL AuthyCoresdkHasStorage();

FOUNDATION_EXPORT BOOL AuthyCoresdkInitDefaultStorage(NSString* path, NSData* encryptionKey, NSError** error);

FOUNDATION_EXPORT BOOL AuthyCoresdkIsRegistered();

FOUNDATION_EXPORT BOOL AuthyCoresdkLoadConfig(AuthyCoresdkConfig** config, NSError** error);

FOUNDATION_EXPORT BOOL AuthyCoresdkLoadJSON(NSData* jsonData, AuthyCoresdkJSON** ret0_, NSError** error);

FOUNDATION_EXPORT AuthyCoresdkUser* AuthyCoresdkNewUser(int countryCode, NSString* phoneNumber);

FOUNDATION_EXPORT BOOL AuthyCoresdkSetCurrentDevice(AuthyCoresdkDevice* device, NSError** error);

FOUNDATION_EXPORT NSString* AuthyCoresdkStoragePath();

#endif
